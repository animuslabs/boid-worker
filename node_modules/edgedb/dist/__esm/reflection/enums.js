export var Cardinality;
(function (Cardinality) {
    Cardinality["AtMostOne"] = "AtMostOne";
    Cardinality["One"] = "One";
    Cardinality["Many"] = "Many";
    Cardinality["AtLeastOne"] = "AtLeastOne";
    Cardinality["Empty"] = "Empty";
})(Cardinality || (Cardinality = {}));
export var TypeKind;
(function (TypeKind) {
    TypeKind["scalar"] = "scalar";
    TypeKind["enum"] = "enum";
    TypeKind["object"] = "object";
    TypeKind["namedtuple"] = "namedtuple";
    TypeKind["tuple"] = "tuple";
    TypeKind["array"] = "array";
    TypeKind["range"] = "range";
})(TypeKind || (TypeKind = {}));
export var ExpressionKind;
(function (ExpressionKind) {
    ExpressionKind["Set"] = "Set";
    ExpressionKind["Array"] = "Array";
    ExpressionKind["Tuple"] = "Tuple";
    ExpressionKind["NamedTuple"] = "NamedTuple";
    ExpressionKind["TuplePath"] = "TuplePath";
    ExpressionKind["PathNode"] = "PathNode";
    ExpressionKind["PathLeaf"] = "PathLeaf";
    ExpressionKind["Literal"] = "Literal";
    ExpressionKind["Cast"] = "Cast";
    ExpressionKind["Select"] = "Select";
    ExpressionKind["Update"] = "Update";
    ExpressionKind["Delete"] = "Delete";
    ExpressionKind["Insert"] = "Insert";
    ExpressionKind["InsertUnlessConflict"] = "InsertUnlessConflict";
    ExpressionKind["Function"] = "Function";
    ExpressionKind["Operator"] = "Operator";
    ExpressionKind["For"] = "For";
    ExpressionKind["ForVar"] = "ForVar";
    ExpressionKind["TypeIntersection"] = "TypeIntersection";
    ExpressionKind["Alias"] = "Alias";
    ExpressionKind["With"] = "With";
    ExpressionKind["WithParams"] = "WithParams";
    ExpressionKind["Param"] = "Param";
    ExpressionKind["OptionalParam"] = "OptionalParam";
    ExpressionKind["Detached"] = "Detached";
    ExpressionKind["Global"] = "Global";
    ExpressionKind["PolyShapeElement"] = "PolyShapeElement";
    ExpressionKind["Group"] = "Group";
})(ExpressionKind || (ExpressionKind = {}));
export var SelectModifierKind;
(function (SelectModifierKind) {
    SelectModifierKind["filter"] = "filter";
    SelectModifierKind["order_by"] = "order_by";
    SelectModifierKind["offset"] = "offset";
    SelectModifierKind["limit"] = "limit";
})(SelectModifierKind || (SelectModifierKind = {}));
export var OperatorKind;
(function (OperatorKind) {
    OperatorKind["Infix"] = "Infix";
    OperatorKind["Postfix"] = "Postfix";
    OperatorKind["Prefix"] = "Prefix";
    OperatorKind["Ternary"] = "Ternary";
})(OperatorKind || (OperatorKind = {}));
