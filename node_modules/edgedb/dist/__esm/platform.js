import { path, homeDir, exists } from "./adapter.node";
export const isWindows = process.platform === "win32";
let _configDir;
if (process.platform === "darwin") {
    _configDir = () => {
        return path.join(homeDir(), "Library", "Application Support", "edgedb");
    };
}
else if (process.platform === "win32") {
    _configDir = () => {
        var _a;
        const localAppDataDir = (_a = process.env.LOCALAPPDATA) !== null && _a !== void 0 ? _a : path.join(homeDir(), "AppData", "Local");
        return path.join(localAppDataDir, "EdgeDB", "config");
    };
}
else {
    _configDir = () => {
        let xdgConfigDir = process.env.XDG_CONFIG_HOME;
        if (!xdgConfigDir || !path.isAbsolute(xdgConfigDir)) {
            xdgConfigDir = path.join(homeDir(), ".config");
        }
        return path.join(xdgConfigDir, "edgedb");
    };
}
export async function searchConfigDir(...configPath) {
    const filePath = path.join(_configDir(), ...configPath);
    if (await exists(filePath)) {
        return filePath;
    }
    const fallbackPath = path.join(homeDir(), ".edgedb", ...configPath);
    if (await exists(fallbackPath)) {
        return fallbackPath;
    }
    return filePath;
}
